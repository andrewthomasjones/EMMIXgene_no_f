// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// estep
arma::mat estep(const arma::vec& dat, const arma::mat& params);
RcppExport SEXP _EMMIXgene_estep(SEXP datSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(estep(dat, params));
    return rcpp_result_gen;
END_RCPP
}
// mstep
arma::mat mstep(arma::vec dat, arma::mat tau, arma::mat you, arma::mat params);
RcppExport SEXP _EMMIXgene_mstep(SEXP datSEXP, SEXP tauSEXP, SEXP youSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type dat(datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type you(youSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(mstep(dat, tau, you, params));
    return rcpp_result_gen;
END_RCPP
}
// emmix_t
List emmix_t(arma::vec dat, arma::mat params, int g, int max_it);
RcppExport SEXP _EMMIXgene_emmix_t(SEXP datSEXP, SEXP paramsSEXP, SEXP gSEXP, SEXP max_itSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type dat(datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< int >::type g(gSEXP);
    Rcpp::traits::input_parameter< int >::type max_it(max_itSEXP);
    rcpp_result_gen = Rcpp::wrap(emmix_t(dat, params, g, max_it));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EMMIXgene_estep", (DL_FUNC) &_EMMIXgene_estep, 2},
    {"_EMMIXgene_mstep", (DL_FUNC) &_EMMIXgene_mstep, 4},
    {"_EMMIXgene_emmix_t", (DL_FUNC) &_EMMIXgene_emmix_t, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EMMIXgene(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
